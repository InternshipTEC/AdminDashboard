{"version":3,"sources":["components/AbsenList.js","components/AbsenCreate.js","components/AbsenEdit.js","components/UserList.js","components/UserCreate.js","components/UserEdit.js","components/TransactionCreate.js","components/TransactionList.js","components/TransactionEdit.js","components/EventList.js","components/EventCreate.js","components/EventEdit.js","components/FypBlogList.js","components/FypBlogCreate.js","components/FypBlogEdit.js","components/TugasList.js","components/TugasCreate.js","components/TugasEdit.js","components/MateriList.js","components/MateriCreate.js","components/MateriEdit.js","App.js","serviceWorker.js","index.js"],"names":["ListActions","props","className","basePath","total","resource","currentSort","filterValues","exporter","TopToolbar","CreateButton","ExportButton","disabled","sort","filter","AbsenList","List","actions","Datagrid","TextField","source","EditButton","DeleteButton","AbsenCreate","Create","title","SimpleForm","TextInput","AbsenEdit","Edit","UserList","BooleanField","label","EmailField","UserCreate","type","UserEdit","BooleanInput","ArrayInput","SimpleFormIterator","useImageFieldStyles","makeStyles","theme","image","aspectRatio","maxHeight","imageFieldClasses","useState","users","setUsers","React","useEffect","token","localStorage","getItem","axios","get","BACKEND_URL","location","pathname","headers","Authorization","then","res","data","user","console","log","ImageField","classes","component","aria-label","Typography","map","ListItem","ListItemText","primary","EventList","DateField","showTime","EventCreate","DateTimeInput","EventEdit","FypBlogList","FypBlogCreate","FypBlogEdit","MateriList","MateriCreate","MateriEdit","authProvider","login","username","password","post","email","setItem","accessToken","catch","err","toString","logout","removeItem","Promise","resolve","checkError","checkAuth","reject","getPermissions","getIdentity","id","fullName","dataProvider","restProvider","url","options","Headers","Accept","set","fetchUtils","fetchJson","App","Admin","Resource","name","list","create","edit","TransactionList","TransactionCreate","TransactionEdit","TugasList","TugasCreate","TugasEdit","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.146381f8.chunk.js","sourcesContent":["import { CreateButton, ExportButton, TopToolbar } from \"ra-ui-materialui\";\nimport React from \"react\";\nimport {\n  Datagrid,\n  DeleteButton,\n  EditButton,\n  List,\n  TextField,\n} from \"react-admin\";\nimport { ImportButton } from \"react-admin-import-csv\";\n\nconst ListActions = (props) => {\n  const {\n    className,\n    basePath,\n    total,\n    resource,\n    currentSort,\n    filterValues,\n    exporter,\n  } = props;\n  return (\n    <TopToolbar className={className}>\n      <CreateButton basePath={basePath} />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={filterValues}\n        exporter={exporter}\n      />\n      <ImportButton {...props} />\n    </TopToolbar>\n  );\n};\n\nconst AbsenList = (props) => {\n  return (\n    <List {...props} actions={<ListActions />}>\n      <Datagrid>\n        <TextField source=\"absenId\" />\n        <TextField source=\"userId\" />\n        <TextField source=\"eventId\" />\n        <EditButton basePath=\"/absen\" />\n        <DeleteButton basePath=\"/absen\" />\n      </Datagrid>\n    </List>\n  );\n};\n\nexport default AbsenList;\n","import React from \"react\";\nimport { Create, DateTimeInput, SimpleForm, TextInput } from \"react-admin\";\n\nconst AbsenCreate = (props) => {\n  return (\n    <Create title=\"Create an Event\" {...props}>\n      <SimpleForm>\n        <TextInput source=\"userId\" />\n        <TextInput source=\"eventId\" />\n      </SimpleForm>\n    </Create>\n  );\n};\n\nexport default AbsenCreate;\n","import React from \"react\";\nimport { Edit, SimpleForm, TextInput, DateTimeInput } from \"react-admin\";\n\nconst AbsenEdit = (props) => {\n  return (\n    <Edit title=\"Edit Event\" {...props}>\n      <SimpleForm>\n        <TextInput source=\"absenId\" />\n        <TextInput source=\"userId\" />\n        <TextInput source=\"eventId\" />\n      </SimpleForm>\n    </Edit>\n  );\n};\n\nexport default AbsenEdit;\n","import React from \"react\";\nimport {\n  List,\n  Datagrid,\n  TextField,\n  EmailField,\n  BooleanField,\n  EditButton,\n  DeleteButton,\n  TopToolbar,\n  CreateButton,\n  ExportButton,\n} from \"react-admin\";\nimport { ImportButton } from \"react-admin-import-csv\";\n\nconst ListActions = (props) => {\n  const {\n    className,\n    basePath,\n    total,\n    resource,\n    currentSort,\n    filterValues,\n    exporter,\n  } = props;\n  return (\n    <TopToolbar className={className}>\n      <CreateButton basePath={basePath} />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={filterValues}\n        exporter={exporter}\n      />\n      <ImportButton {...props} />\n    </TopToolbar>\n  );\n};\n\n\n\nconst UserList = (props) => {\n  return (\n    <List {...props} actions={<ListActions />}>\n      <Datagrid>\n        <BooleanField source=\"verified\" />\n        <TextField source=\"id\" label=\"No. TEC\" />\n        <TextField source=\"name\" />\n        <EmailField source=\"email\" />\n        <TextField source=\"absenPercentage\" />\n        <EditButton basePath=\"/users\" />\n        <DeleteButton basePath=\"/users\" />\n      </Datagrid>\n    </List>\n  );\n};\n\nexport default UserList;\n","import React from 'react'\nimport { Create, SimpleForm, TextInput } from 'react-admin'\n\nconst UserCreate = (props) => {\n  return (\n    <Create title='Create a User' {...props}>\n      <SimpleForm>\n        <TextInput source='name' />\n        <TextInput source='email' />\n        <TextInput source='nim' />\n        <TextInput source='password' type=\"password\" />\n      </SimpleForm>\n    </Create>\n  )\n}\n\nexport default UserCreate\n","import React from 'react'\nimport { Edit, SimpleForm, TextInput, BooleanInput} from 'react-admin'\n\nconst UserEdit = (props) => {\n  return (\n    <Edit title='Edit User' {...props}>\n      <SimpleForm>\n        <TextInput disabled source='id' />\n        <TextInput source='name' />\n        <TextInput source='nim' />\n        <TextInput source='fakultas' />\n        <TextInput source='email' />\n        <BooleanInput source='verified' />\n      </SimpleForm>\n    </Edit>\n  )\n}\n\nexport default UserEdit\n","import React from 'react'\nimport { Create, SimpleForm, SimpleFormIterator, TextInput, ArrayInput } from 'react-admin'\n\nconst UserCreate = (props) => {\n  return (\n    <Create title='Create a Transaction' {...props}>\n      <SimpleForm>\n        <TextInput source='photoUrl' />\n        <TextInput source='noRekening' />\n        <TextInput source='pemilikRekening' />\n        <TextInput source='media' />\n        <TextInput source='metode' />\n        <TextInput source='nominal' />\n        <TextInput source='uniqueIdentifier' />\n        <ArrayInput source='usersEmail'>\n          <SimpleFormIterator>\n            <TextInput />\n          </SimpleFormIterator>\n        </ArrayInput>\n      </SimpleForm>\n    </Create>\n  )\n}\n\nexport default UserCreate\n","import React from 'react'\nimport {\n  List,\n  Datagrid,\n  TextField,\n  EditButton,\n  DeleteButton,\n  BooleanField\n} from 'react-admin'\n\nconst UserList = (props) => {\n  return (\n    <List {...props}>\n      <Datagrid>\n        <BooleanField source=\"verified\"/>\n        <TextField source='uniqueIdentifier' />\n        <TextField source='pemilikRekening' />\n        <EditButton basePath='/transaction' />\n        <DeleteButton basePath='/transaction' />\n      </Datagrid>\n    </List>\n  )\n}\n\nexport default UserList\n","import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Edit, SimpleForm, TextInput, ImageField, BooleanInput, ArrayField, SingleFieldList, TextField, Datagrid, ChipField, SimpleFormIterator, ArrayInput } from 'react-admin'\nimport { cloneElement } from 'react'\nimport { Chip, List, ListItem, ListItemText, Typography } from '@material-ui/core';\nimport axios from 'axios';\nimport { BACKEND_URL } from '../App';\n\nconst useImageFieldStyles = makeStyles(theme => ({\n  image: { // This will override the style of the <img> inside the <div>\n    aspectRatio:\"initial\",\n    maxHeight:\"none\"\n  }\n}));\n\nconst TextArrayField = ({ record, source }) =>{ \n  React.useEffect(()=>{\n    console.log(record)\n  },[]) \n  return (\n  <>\n      {record[source].map(item => <ChipField label={item} key={item} />)}\n  </>\n)}\nTextArrayField.defaultProps = { addLabel: true };\n\nconst TagsField = ({ record }) => (\n  <ul>\n      {record.user.map(item => (\n          <li key={item}>{item}</li>\n      ))}\n  </ul>\n)\nTagsField.defaultProps = {\n  addLabel: true\n};\n\nconst UserEdit = (props) => {\n  const imageFieldClasses = useImageFieldStyles();\n  const [users, setUsers] = useState([]) \n  React.useEffect(()=>{\n    const token = localStorage.getItem('auth')\n    axios.get(BACKEND_URL + props.location.pathname,{\n      headers:{\n        Authorization:`Bearer ${token}`\n      }\n    })\n    .then(res=>res.data)\n    .then(data=>setUsers(data.data.user))\n  },[])\n  React.useEffect(()=>{\n    console.log(users)\n  },[,users])\n  return (\n    <Edit title='Edit User' {...props}>\n      <SimpleForm>\n        <ImageField classes={imageFieldClasses} source='photoUrl' />\n        <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n          <Typography>Users : </Typography>\n        {\n          users.map(user=>(\n            <>\n                <ListItem>\n                  <ListItemText primary={user} />\n                </ListItem>\n            </>\n          ))\n        }     \n        </List>\n        <TextInput source='uniqueIdentifier' disabled/>\n        <TextInput source='nominal' disabled/>\n        <TextInput source='media' disabled/>\n        <TextInput source='noRekening' disabled/>\n        <TextInput source='pemilikRekening' disabled/>\n        <BooleanInput source='verified'/>\n      </SimpleForm>\n        \n    </Edit>\n  )\n}\n\nexport default UserEdit\n","import React from 'react'\nimport {\n  List,\n  Datagrid,\n  TextField,\n  EditButton,\n  DeleteButton,\n  DateField\n} from 'react-admin'\n\n\nconst EventList = (props) => {\n  return (\n    <List {...props}>\n      <Datagrid>\n        <TextField source='id' />\n        <TextField source='name' />\n        <DateField showTime={true} source='absenStartsAt' />\n        <DateField showTime={true} source='absenEndedAt' />\n        <EditButton basePath='/event' />\n        <DeleteButton basePath='/event' />\n      </Datagrid>\n    </List>\n  )\n}\n\nexport default EventList \n","import React from 'react'\nimport { Create, DateTimeInput, SimpleForm, TextInput } from 'react-admin'\n\nconst EventCreate = (props) => {\n  return (\n    <Create title='Create an Event' {...props}>\n      <SimpleForm>\n        <TextInput source='name'/>\n        <TextInput source='description'/>\n        <DateTimeInput source='absenStartsAt'/>\n        <DateTimeInput source='absenEndedAt'/>\n      </SimpleForm>\n    </Create>\n  )\n}\n\nexport default EventCreate\n","import React from 'react';\nimport { Edit, SimpleForm, TextInput, DateTimeInput} from 'react-admin';\n\nconst EventEdit = (props) => {\n  return (\n    <Edit title='Edit Event' {...props}>\n      <SimpleForm>\n        <TextInput source='name'/>\n        <TextInput source='description'/>\n        <DateTimeInput source='absenStartsAt'/>\n        <DateTimeInput source='absenEndedAt'/>\n      </SimpleForm>\n    </Edit>\n  )\n}\n\nexport default EventEdit\n","import React from 'react'\nimport {\n  List,\n  Datagrid,\n  TextField,\n  EditButton,\n  DeleteButton,\n} from 'react-admin'\n\nconst FypBlogList = (props) => {\n  return (\n    <List {...props}>\n      <Datagrid>\n        <TextField source='id' />\n        <TextField source='role' />\n        <EditButton basePath='/fyp-blog' />\n        <DeleteButton basePath='/fyp-blog' />\n      </Datagrid>\n    </List>\n  )\n}\n\nexport default FypBlogList\n","import React from \"react\";\nimport { Create, SimpleForm, TextInput } from \"react-admin\";\nimport MarkdownInput from 'ra-input-markdown';\n\nconst FypBlogCreate = (props) => {\n  return (\n    <Create title=\"Create a Blog\" {...props}>\n      <SimpleForm>\n        <TextInput source=\"role\" />\n        <MarkdownInput source=\"content\" />\n      </SimpleForm>\n    </Create>\n  );\n};\n\nexport default FypBlogCreate;\n","import React from \"react\";\nimport { Edit, SimpleForm, TextInput } from \"react-admin\";\nimport MarkdownInput from 'ra-input-markdown';\n\nconst FypBlogEdit = (props) => {\n  return (\n    <Edit title=\"Edit Blog\" {...props}>\n      <SimpleForm>\n        <TextInput source=\"role\" />\n        <MarkdownInput source=\"content\" />\n      </SimpleForm>\n    </Edit>\n  );\n};\n\nexport default FypBlogEdit;\n","import React from \"react\";\nimport {\n  List,\n  Datagrid,\n  TextField,\n  EditButton,\n  DeleteButton,\n  DateField,\n} from \"react-admin\";\n\nconst EventList = (props) => {\n  return (\n    <List {...props}>\n      <Datagrid>\n        <TextField source=\"id\" />\n        <TextField source=\"name\" />\n        <DateField showTime={true} source=\"startsAt\" />\n        <DateField showTime={true} source=\"endedAt\" />\n        <EditButton basePath=\"/tugas\" />\n        <DeleteButton basePath=\"/tugas\" />\n      </Datagrid>\n    </List>\n  );\n};\n\nexport default EventList;\n","import React from \"react\";\nimport { Create, DateTimeInput, SimpleForm, TextInput } from \"react-admin\";\n\nconst EventCreate = (props) => {\n  return (\n    <Create title=\"Create an Event\" {...props}>\n      <SimpleForm>\n        <TextInput source=\"name\" />\n        <TextInput source=\"iframeForm\" />\n        <DateTimeInput source=\"startsAt\" />\n        <DateTimeInput source=\"endedAt\" />\n      </SimpleForm>\n    </Create>\n  );\n};\n\nexport default EventCreate;\n","import React from \"react\";\nimport { Edit, SimpleForm, TextInput, DateTimeInput } from \"react-admin\";\n\nconst EventEdit = (props) => {\n  return (\n    <Edit title=\"Edit Event\" {...props}>\n      <SimpleForm>\n        <TextInput source=\"name\" />\n        <TextInput source=\"iframeForm\" />\n        <DateTimeInput source=\"startsAt\" />\n        <DateTimeInput source=\"endedAt\" />\n      </SimpleForm>\n    </Edit>\n  );\n};\n\nexport default EventEdit;\n","import React from \"react\";\nimport {\n  List,\n  Datagrid,\n  TextField,\n  EditButton,\n  DeleteButton,\n} from \"react-admin\";\n\nconst MateriList = (props) => {\n  return (\n    <List {...props}>\n      <Datagrid>\n        <TextField source=\"id\" />\n        <TextField source=\"judul\" />\n        <EditButton basePath=\"/materi\" />\n        <DeleteButton basePath=\"/materi\" />\n      </Datagrid>\n    </List>\n  );\n};\n\nexport default MateriList;\n","import React from \"react\";\nimport { Create, SimpleForm, TextInput } from \"react-admin\";\n\nconst MateriCreate = (props) => {\n  return (\n    <Create title=\"Create an Create\" {...props}>\n      <SimpleForm>\n        <TextInput source=\"judul\" />\n        <TextInput source=\"deskripsi\" />\n        <TextInput source=\"link\" />\n      </SimpleForm>\n    </Create>\n  );\n};\n\nexport default MateriCreate;\n","import React from \"react\";\nimport { Edit, SimpleForm, TextInput } from \"react-admin\";\nimport MarkdownInput from 'ra-input-markdown';\n\nconst MateriEdit = (props) => {\n  return (\n    <Edit title=\"Edit Materi\" {...props}>\n      <SimpleForm>\n        <TextInput source=\"role\" />\n        <MarkdownInput source=\"content\" />\n      </SimpleForm>\n    </Edit>\n  );\n};\n\nexport default MateriEdit;\n","import React from \"react\";\nimport { Admin, fetchUtils, Resource } from \"react-admin\";\nimport restProvider from \"ra-data-simple-rest\";\nimport AbsenList from \"./components/AbsenList\";\nimport AbsenCreate from \"./components/AbsenCreate\";\nimport AbsenEdit from \"./components/AbsenEdit\";\nimport UserList from \"./components/UserList\";\nimport UserCreate from \"./components/UserCreate\";\nimport UserEdit from \"./components/UserEdit\";\nimport TransactionCreate from \"./components/TransactionCreate\";\nimport TransactionList from \"./components/TransactionList\";\nimport TransactionEdit from \"./components/TransactionEdit\";\nimport axios from \"axios\";\nimport EventList from \"./components/EventList\";\nimport EventCreate from \"./components/EventCreate\";\nimport EventEdit from \"./components/EventEdit\";\nimport FypBlogList from \"./components/FypBlogList\";\nimport FypBlogCreate from \"./components/FypBlogCreate\";\nimport FypBlogEdit from \"./components/FypBlogEdit\";\nimport TugasList from \"./components/TugasList\";\nimport TugasCreate from \"./components/TugasCreate\";\nimport TugasEdit from \"./components/TugasEdit\";\nimport MateriList from \"./components/MateriList\";\nimport MateriCreate from \"./components/MateriCreate\";\nimport MateriEdit from \"./components/MateriEdit\";\n\nexport const BACKEND_URL = \"http://localhost:3000\";\n// export const BACKEND_URL = \"https://api.tecinternship2021.com\";\n\nconst authProvider = {\n  login: ({ username, password }) => {\n    return axios\n      .post(`${BACKEND_URL}/auth/login`, {\n        email: username,\n        password,\n      })\n      .then((data) => data.data.data)\n      .then((data) => {\n        localStorage.setItem(\"auth\", data.accessToken);\n      })\n      .catch((err) => {\n        console.log(err.toString());\n      });\n    // accept all username/password combinations\n  },\n  logout: () => {\n    localStorage.removeItem(\"auth\");\n    return Promise.resolve();\n  },\n  checkError: () => Promise.resolve(),\n  checkAuth: () =>\n    localStorage.getItem(\"auth\") ? Promise.resolve() : Promise.reject(),\n  getPermissions: () => Promise.reject(\"Unknown method\"),\n  getIdentity: () =>\n    Promise.resolve({\n      id: \"user\",\n      fullName: \"Admin TEC\",\n    }),\n};\n\nconst httpClient = (url, options = {}) => {\n  if (!options.headers) {\n    options.headers = new Headers({ Accept: \"application/json\" });\n  }\n  const accessToken = localStorage.getItem(\"auth\");\n  options.headers.set(\"Authorization\", `Bearer ${accessToken}`);\n  return fetchUtils.fetchJson(url, options);\n};\n\nconst dataProvider = restProvider(BACKEND_URL, httpClient);\n\nfunction App() {\n  return (\n    <Admin dataProvider={dataProvider} authProvider={authProvider}>\n      <Resource\n        name=\"users\"\n        list={UserList}\n        create={UserCreate}\n        edit={UserEdit}\n      />\n      <Resource\n        name=\"transaction\"\n        list={TransactionList}\n        create={TransactionCreate}\n        edit={TransactionEdit}\n      />\n      <Resource\n        name=\"absen\"\n        list={AbsenList}\n        create={AbsenCreate}\n        edit={AbsenEdit}\n      />\n      <Resource\n        name=\"event\"\n        list={EventList}\n        create={EventCreate}\n        edit={EventEdit}\n      />\n      <Resource\n        name=\"tugas\"\n        list={TugasList}\n        create={TugasCreate}\n        edit={TugasEdit}\n      />\n      <Resource\n        name=\"materi\"\n        list={MateriList}\n        create={MateriCreate}\n        edit={MateriEdit}\n      />\n      <Resource\n        name=\"fyp-blog\"\n        list={FypBlogList}\n        create={FypBlogCreate}\n        edit={FypBlogEdit}\n      />\n    </Admin>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}